{\rtf1\ansi\ansicpg949\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh11900\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Map
\f1 \'c0\'ce\'c5\'cd\'c6\'e4\'c0\'cc\'bd\'ba\'c0\'c7
\f0  
\f1 \'b8\'de\'bc\'ad\'c6\'ae
\f0  - 
\f1 \'bc\'f8\'bc\'ad
\f0 X, 
\f1 \'c1\'df\'ba\'b9
\f0 (
\f1 \'c5\'b0
\f0 X, 
\f1 \'b0\'aa
\f0 O)\
\
void clear()\
	Map
\f1 \'c0\'c7
\f0  
\f1 \'b8\'f0\'b5\'e7
\f0  
\f1 \'b0\'b4\'c3\'bc\'b8\'a6
\f0  
\f1 \'bb\'e8\'c1\'a6\'c7\'d1\'b4\'d9
\f0 .\
\
boolean containsKey(Object key)\
	
\f1 \'c8\'ae\'c0\'ce
\f0  (
\f1 \'c0\'d6\'c0\'b8\'b8\'e9
\f0 true, 
\f1 \'be\'f8\'c0\'b8\'b8\'e9false)
\f0 \
	
\f1 \'c1\'f6\'c1\'a4\'b5\'c8
\f0  key
\f1 \'b0\'b4\'c3\'bc\'bf\'cd
\f0  
\f1 \'c0\'cf\'c4\'a1\'c7\'cf\'b4\'c2
\f0  Map
\f1 \'c0\'c7
\f0  key
\f1 \'b0\'b4\'c3\'bc\'b0\'a1
\f0  
\f1 \'c0\'d6\'b4\'c2\'c1\'f6
\f0  
\f1 \'c8\'ae\'c0\'ce\'c7\'d1\'b4\'d9
\f0 .\
\
boolean containsValue(Object value)\
	
\f1 \'c8\'ae\'c0\'ce
\f0  (
\f1 \'c0\'d6\'c0\'b8\'b8\'e9
\f0 true, 
\f1 \'be\'f8\'c0\'b8\'b8\'e9false)
\f0 \
	
\f1 \'c1\'f6\'c1\'a4\'b5\'c8
\f0  value
\f1 \'b0\'b4\'c3\'bc\'bf\'cd
\f0  
\f1 \'c0\'cf\'c4\'a1\'c7\'cf\'b4\'c2
\f0  Map
\f1 \'c0\'c7
\f0  value
\f1 \'b0\'b4\'c3\'bc\'b0\'a1
\f0  
\f1 \'c0\'d6\'b4\'c2\'c1\'f6
\f0  
\f1 \'c8\'ae\'c0\'ce\'c7\'d1\'b4\'d9
\f0 .\
\
Set entrySet()\
	entry = key-value
\f1 \'bd\'d6\'c0\'bb
\f0  
\f1 \'be\'cb\'b8\'b0\'b4\'d9
\f0 \
	
\f1 Map\'bf\'a1 \'c0\'fa\'c0\'e5\'b5\'c7\'be\'ee \'c0\'d6\'b4\'c2 key-value\'bd\'d6\'c0\'bb Map, Entry\'c5\'b8\'c0\'d4\'c0\'c7 \'b0\'b4\'c3\'bc\'b7\'ce \'c0\'fa\'c0\'e5\'c7\'d1 Set\'c0\'b8\'b7\'ce \'b9\'dd\'c8\'af\'c7\'d1\'b4\'d9.\
Set keySet()\
Set values()\
\
boolean equals(Object o)\
	\'b5\'bf\'c0\'cf\'c7\'d1 Map\'c0\'ce\'c1\'f6 \'ba\'f1\'b1\'b3\'c7\'d1\'b4\'d9.\
\
Object get(Object key)\
	\'c1\'b6\'c8\'b8\
	\'c1\'f6\'c1\'a4\'c7\'d1 key\'b0\'b4\'c3\'bc\'bf\'a1 \'b4\'eb\'c0\'c0\'c7\'cf\'b4\'c2 value\'b0\'b4\'c3\'bc\'b8\'a3 \'c3\'a3\'be\'c6\'bc\'ad \'b9\'dd\'c8\'af\'c7\'d1\'b4\'d9.\
\
int hashCode()\
	\'c7\'d8\'bd\'c3\'c4\'da\'b5\'e5\'b8\'a6 \'b9\'dd\'c8\'af\'c7\'d1\'b4\'d9.\
\
boolean isEmpty()\
	Map\'c0\'cc \'ba\'f1\'be\'ee \'c0\'d6\'b4\'c2\'c1\'f6 \'c8\'ae\'c0\'ce\'c7\'d1\'b4\'d9.\
\
Set keySet()\
	Map\'bf\'a1 \'c0\'fa\'c0\'e5\'b5\'c8 \'b8\'f0\'b5\'e7 key\'b0\'b4\'c3\'bc\'b8\'a6 \'b9\'dd\'c8\'af\'c7\'d1\'b4\'d9.\
\
Object put(Object key, Object value)\
	\'c3\'df\'b0\'a1\
	Map\'bf\'a1 value\'b0\'b4\'c3\'bf\'b8\'a3 key\'b0\'b4\'c3\'bc\'bf\'a1 \'bf\'ac\'b0\'e1(mapping)\'c7\'cf\'bf\'a9 \'c0\'fa\'c0\'e5\'c7\'d1\'b4\'d9.\
\
void putAll(Map t)\
	\'c3\'df\'b0\'a1\
	\'c1\'f6\'c1\'a4\'b5\'c8 Map\'c0\'c7 \'b8\'f0\'b5\'e7 key-value\'bd\'d6\'c0\'bb \'c3\'df\'b0\'a1\'c7\'d1\'b4\'d9.\
\
Object remove(Object key)\
	\'c1\'a6\'b0\'c5\
	\'c1\'f6\'c1\'a4\'c7\'d1 key\'b0\'b4\'c3\'bc\'bf\'cd \'c0\'cf\'c4\'a1\'c7\'cf\'b4\'c2 key-value\'b0\'b4\'c3\'bc\'b8\'a6 \'bb\'e8\'c1\'a6\'c7\'d1\'b4\'d9.\
\
int size()\
	Map\'bf\'a1 \'c0\'fa\'c0\'e5\'b5\'c8 key-value\'bd\'d6\'c0\'c7 \'b0\'b3\'bc\'f6\'b8\'a6 \'b9\'dd\'c8\'af\'c7\'d1\'b4\'d9.\
\
Collection values()\
	Map\'bf\'a1 \'c0\'fa\'c0\'e5\'b5\'c8 \'b8\'f0\'b5\'e7 value\'b0\'b4\'c3\'bc\'b8\'a6 \'b9\'dd\'c8\'af\'c7\'d1\'b4\'d9.\
\
\
}