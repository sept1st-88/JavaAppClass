//	abstract?
//		추상의, 미완성의
//		abstract가 사용될 수 있는 곳 - 클래스, 메서드
//	메서드의 선언부만 작성하고 실제 수행내용은 구현하지 않은 추상 메서드를 선언하는데 사용된다

//	추상?
//		낱낱의 구체적 표상이나 개념에서 공통된 성질은 뽑아 이를 일반적인 개념으로 파악하는 정신 작용
//	추상화?
//		클래스간의 공통점을 찾아내서 공통의 조상을 만드는 작업 (구체화에서 반대 작업)	
//	구체화?
//		상속을 통해 클래스를 구현, 확장하는 작업

//	public - 보안의 영역   //abstract - 어떤 내용인지
public abstract class AbstractTest {
//	abstract class? 클래스 내에 추상 메서드가 선언되어 있음을 의마한다. 절대로 객체를 만들 수 없다.
//	물건을 만들수 없다
	
//	메서드에 abstract가 있으면 선언부만 작성하고 구현부는 작성하지 않은 추상 메서드임을 알린다
	public abstract void move();
	
	//구현부
//	void move() {	
//		
//	}

}



public abstract class Tv1 {
	
	boolean power;
	int channel;
	
	abstract void power();

	void channelUp() {
		channel++;
	}
	
	void channelDown() {
		channel--;
	}
	
	abstract void info();
	
}

public class SilenceTv1 extends Tv1 {
//	The type SilenceTv must implement the inherited abstract method Tv.power()
//	부모 클래스에 abstract 메서드를 무조건 자식에서 실행시켜야한다
	
	void power() {
		
	}

	void info() {
		// TODO Auto-generated method stub
		
	}

}