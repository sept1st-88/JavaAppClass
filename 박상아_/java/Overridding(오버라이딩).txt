// Overriding
// 오버라이딩? (상속 상황에서만 사용된다)
	// 조상 클래스로부터 상속받은 메서드의 내용을 변경하는 것을 오버라이딩이라고 한다.
	// 상속받은 메서드를 그대로 사용하기도 하지만, 자식 클래스 자신에 맞게 변경해야하는
	// 경우가 많다. 이럴 떄 조상의 메서드를 오버라이딩 한다.

// 오버라이딩의 조건
	// 자식 클래스에서 오버라이딩하는 메서드는 조상 클래스의 메서드와
	// - 이름이 같아야 한다
	// - 매개변수가 같아야 한다
	// - 반환타입이 같아야 한다 (구현만 달라야 한다)


/*
 * 오버로딩 vs 오버라이딩
 * 오버로딩은 기존에 없는 새로운 메서드를 추가하는 것 (new)
 * 오버라이딩은 상속받은 메서드의 내용을 변경하는 것 (change, modify)
 */


// 오버라이딩
// 접근 제어자는 조상 클래스의 메서드보다 좁은 범위로 변경 할 수 없다

public class Child extends Parent {

	//default는 public보다 좁은 범위이고 Parent에서 method()는 public이기 때문에
	//default 상태에서 오버라이딩 할 수 없다
	//반대로 Parent가 default이더라도 Child에서는 public을 사용할 수 있다.
	//하지만 특별한 경우 아닌 이상 동일한 범위를 잡는다
	public void method() {
		System.out.println("x = " + x);
		System.out.println("this.x = " + this.x);
		System.out.println("super.x = " + super.x);
	}
	
}

public class Parent {

	int x = 10;
	
	public void method() {
		
	}
	
}